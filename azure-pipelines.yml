trigger:
  branches:
    include:
      - main

pool:
  vmImage: ubuntu-latest

variables:
  nodeVersion: '18.x'
  azureServiceConnection: 'AzureServiceConnection'   # name of your service connection
  webAppName: 'my-express-app'                      # name of your Web App in Azure

stages:

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Build stage â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
- stage: Build
  displayName: ðŸ”¨ Build
  jobs:
  - job: BuildJob
    displayName: Build & Package
    steps:
    - task: NodeTool@0
      displayName: 'Install Node.js $(nodeVersion)'
      inputs:
        versionSpec: '$(nodeVersion)'

    - script: |
        npm install
      displayName: 'npm install'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: '$(Build.ArtifactStagingDirectory)/app.zip'

    - publish: '$(Build.ArtifactStagingDirectory)'
      displayName: 'Publish artifact'
      artifact: drop

# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Deploy stage â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
- stage: Deploy
  displayName: ðŸš€ Deploy
  dependsOn: Build
  jobs:
  - deployment: DeployWeb
    displayName: 'Deploy to Azure Web App'
    environment: 'production'   # use the environment name you like
    pool:
      vmImage: ubuntu-latest
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop

          - task: AzureWebApp@1
            displayName: 'Azure Web App Deploy'
            inputs:
              azureSubscription: '$(azureServiceConnection)'
              appType: webAppLinux
              appName: '$(webAppName)'
              package: '$(Pipeline.Workspace)/drop/app.zip'
